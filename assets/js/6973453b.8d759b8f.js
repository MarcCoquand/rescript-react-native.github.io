(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{117:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var o=t(3),r=t(7),a=(t(0),t(189)),i={id:"logbox",title:"LogBox",officialDoc:"https://reactnative.dev/docs/debugging#logbox"},c={unversionedId:"logbox",id:"logbox",isDocsHomePage:!1,title:"LogBox",description:"Errors and warnings in development builds are displayed in LogBox inside your app.",source:"@site/docs/logbox.md",sourceDirName:".",slug:"/logbox",permalink:"/docs/logbox",editUrl:"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/docs/logbox.md",version:"current",frontMatter:{id:"logbox",title:"LogBox",officialDoc:"https://reactnative.dev/docs/debugging#logbox"}},l=[{value:"<code>ignoreLogs</code>",id:"ignorelogs",children:[]},{value:"<code>ignoreAllLogs</code>",id:"ignorealllogs",children:[]}],s={toc:l};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Errors and warnings in development builds are displayed in LogBox inside your app."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"LogBox is automatically disabled in release (production) builds.")),Object(a.b)("h2",{id:"ignorelogs"},Object(a.b)("inlineCode",{parentName:"h2"},"ignoreLogs")),Object(a.b)("p",null,"Console errors and warnings are displayed as on-screen notifications with a red or yellow badge, and the number of errors or warning in the console respectively. To view a console error or warnings, tap the notification to view the full screen information about the log and to paginiate through all of the logs in the console."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"type signature")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rescript"},"ignoreLogs: array(string) => unit\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rescript"},'open ReactNative;\n\nLogBox.ignoreLogs([\n  "Require cycle:",\n  "Remote debugger",\n  "Accessing view manager configs",\n  "Warning: componentWillReceiveProps",\n  "Warning: componentWillMount",\n]);\n')),Object(a.b)("h2",{id:"ignorealllogs"},Object(a.b)("inlineCode",{parentName:"h2"},"ignoreAllLogs")),Object(a.b)("p",null,"These notifications can be hidden using ",Object(a.b)("inlineCode",{parentName:"p"},"ReactNative.LogBox.ignoreAllLogs()"),". This is useful when giving product demos, for example. Additionally, notifications can be hidden on a per-log basis via ",Object(a.b)("inlineCode",{parentName:"p"},'ReactNative.LogBox.ignoreLogs([|"Require cycle:"|])'),". This is useful when there's a noisy warning that cannot be fixed, like those in a third-party dependency."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Ignore logs as a last resort and create a task to fix any logs that are ignored.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"type signature")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rescript"},"ignoreAllLogs: unit => unit\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rescript"},"open ReactNative;\n\nLogBox.ignoreAllLogs();\n")))}p.isMDXComponent=!0},189:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},g=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(t),g=o,d=b["".concat(i,".").concat(g)]||b[g]||u[g]||a;return t?r.a.createElement(d,c(c({ref:n},s),{},{components:t})):r.a.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);